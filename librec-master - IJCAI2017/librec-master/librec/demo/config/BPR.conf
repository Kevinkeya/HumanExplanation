################################################### User-Item Ratings #############################################
# dataset: user-item ratings 
dataset.ratings.wins = D:\\workspace\\InformationRetrieval\\librec-master-Recsys2016\\librec-master-Recsys2016\\datasets-Recsys2016\\twitter\\london.txt

################## Auxiliary user information for TMF method #############
dataset.userinfo.wins = D:\\workspace\\InformationRetrieval\\librec-master-Recsys2016\\librec-master-Recsys2016\\datasets-Recsys2016\\twitter\\info.txt

dataset.continentsinfo.wins = D:\\workspace\\InformationRetrieval\\librec-master-Recsys2016\\librec-master-Recsys2016\\datasets-Recsys2016\\twitter\\continents.txt

###################### Settings for TMF method #################

is.user_info.add = on
TMF.alpha = 0.01

# options: -columns: (user, item, [rating, [timestamp]]) columns of rating data; -threshold: to binary ratings;
# --time-unit [DAYS, HOURS, MICROSECONDS, MILLISECONDS, MINUTES, NANOSECONDS, SECONDS]; --as-tensor: read as a tensor; -headline; 
ratings.setup=-columns 0 1 2 -threshold -1 --time-unit SECONDS

recommender= BPR

# main option: 1. test-set -f test-file-path; 2. cv (cross validation) -k k-folds [-p on, off]  
# 3. leave-one-out -t threads -target u, i, r [--by-date]; 4. given-ratio -r ratio -target u, i, r [--by-date]; 5. given-n -N n -target u, i [--by-date]
evaluation.setup=  cv -k 5

# test-set -f D:\\workspace\\InformationRetrieval\\librec-master-Recsys2016\\librec-master-Recsys2016\\datasets-Recsys2016\\twitter\\london.txt

item.ranking=off -topN -1

# main option: is writing out recommendation results; [--fold-data --save-model]
output.setup=on -dir ./Results/ -verbose on

################################################### CMF or SVDF Methods ##########################################
is.category.add = off


################################################### Model-based Methods ##########################################
num.factors= 10
num.max.iter= 200

# options: -bold-driver, -decay ratio, -moment value
learn.rate= 0.0001

#reg.lambda=0.05 -u 0.01 -i 0.01 -b 0.05 -s 0.05
reg.lambda=0.05

# probabilistic graphic models
pgm.setup=-alpha 2 -beta 0.5 -burn-in 300 -sample-lag 10 -interval 100

